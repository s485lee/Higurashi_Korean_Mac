void main()
{
	//SetStyleOfMessageWindow( 1, 0 );
	//SetFontOfMessage( 2, 24, 1 );
	//SetValidityOfSaving( TRUE );
	//SetValidityOfLoading( TRUE );
	//SetValidityOfInput( TRUE );
	//SetValidityOfSkipping( TRUE );
	//ActivateScreenEffectForcedly( TRUE );

	FadeOutBGM( 0, 0, FALSE );
	FadeOutBGM( 1, 0, FALSE );
	FadeOutBGM( 2, 0, FALSE );
	FadeOutBGM( 3, 0, FALSE );
	ClearMessage();

	DrawScene("black", 1000 );
	SetSpeedOfMessage( FALSE, 0 );
	DrawScene("background/ke_shiryou1_02", 1000 );
	PlayBGM( 0, "Iru", 56, 0 );

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　皆さんは人殺しが、動機によっては許されるなんて、思いますか？",
		   NULL, "여러분은 동기에 따라 살인이 허용된다고 생각하십니까? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　こんにちは、竜騎士07です。",
		   NULL, "안녕하세요. 용기사07입니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　この度は「ひぐらしのなく頃に解」目明し編をお楽しみいただき、誠にありがとうございます。",
		   NULL, "이번에 '쓰르라미 울 적에 해' ~메아카시 편~ 을 즐겨주셔서 정말로 감사합니다. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　人の死を多く描く「ひぐらし」ですが、描きながら自問することがあります。",
		   NULL, "사람의 죽음을 많이 그리는 '쓰르라미' 인데요, 그리면서 자문하는 경우가 있습니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　それは、許される殺人はありえるのか、ということです。",
		   NULL, "그건 바로 '용서받을 수 있는 살인이 있는가' 하는 점입니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　私たちの世の中では、殺人は裁かれ、その動機や事情によって罪の軽重が変わります。",
		   NULL, "세상에서 살인은 재판을 거쳐 동기와 사정에 따라 죄의 경중이 달라집니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　命の対価が罪の重さなら、それは私たちが命の価値に個人差を認めていることになります。",
		   NULL, "생명의 대가가 죄의 무게라면, 이건 우리가 생명의 가치에 대한 개인차를 인정하는 것입니다. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　「ひぐらし」の世界には、殺人を肯定するシーンが描かれる時があります。",
		   NULL, "'쓰르라미'의 세계에서는 살인을 긍정하는 장면이 그려질 때가 있습니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　そこでは、殺される人間の命の価値が薄められることにより、プレイヤーの皆さんの「同意」を得やすくされています。",
		   NULL, "거기에서 살해당하는 인간이 지닌 생명의 가치를 희석시킴으로써, 플레이어 여러분의 \"동의\"를 얻기 쉽게 합니다. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　同意は人によって異なります。",
		   NULL, "동의에 대해서는 사람마다 다릅니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　同意した方は一体感とカタルシスを感じ、同意できなかった方は狂気と不快感を感じたと思います。",
		   NULL, "동의하신 분은 동질감과 카타르시스를 느끼고, 동의하지 못하신 분은 광기와 불쾌감을 느꼈을 겁니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "「祟殺し編」における圭一の評価の二極化が、これを如実に物語るかと思います。",
		   NULL, "'타타리고로시 편'에서 케이이치에 대한 평가가 양극화된 것이 이에 대한 적절한 설명입니다. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　今回の「目明し編」でも、多くの殺人が描かれています。",
		   NULL, "이번 '메아카시 편'에서도 많은 살인이 그려집니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　今回の主人公、詩音は個々の殺人に、自分の同意を得ようとしていました。",
		   NULL, "이번 주인공 시온은 각각의 살인에 대해 스스로의 동의를 얻고자 했습니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　皆さんはどうでしたか？",
		   NULL, "여러분은 어떠셨나요? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　どこまで同意が出来ましたか？",
		   NULL, "어디까지 동의를 하셨나요? ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　ひとつも同意できなかった方は、どうか詩音を殺人鬼と罵ってください。",
		   NULL, "하나도 동의하지 않으신 분은 시온을 살인마로 매도해 주세요. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　いくつか同意できた方は、どうか詩音を哀れんでください。",
		   NULL, "몇 가지 부분에서 동의하신 분은 시온을 불쌍히 여겨주세요. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　ほとんど同意できた方も、どうか詩音を哀れんでください。",
		   NULL, "거의 동의하신 분들도 부디 시온을 불쌍히 여겨주세요. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　全部、同意できた方は、詩音と一緒に殺人鬼と罵られてください（笑）",
		   NULL, "전부 동의하신 분은 시온과 함께 살인마라고 매도 받으세요. (웃음) ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　竜騎士07はですか？",
		   NULL, "용기사07은요? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　………さて、それは内緒。",
		   NULL, "......글쎄요, 그건 비밀이에요. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　ところで質問の仕方を逆にしますが、",
		   NULL, "그럼 질문을 반대로 해보겠습니다. ", Line_WaitForInput);
	OutputLine(NULL, "…あなたは殺されるならどんな犯人になら納得できますか？",
		   NULL, "...당신은 어떤 범인에게 살해당할 때 납득할 수 있겠습니까? ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　人の命など何とも思わない快楽犯？",
		   NULL, "사람의 목숨 따위는 아무렇지도 않게 생각하는 쾌락범? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　これは悔しいですよね。",
		   NULL, "이건 억울하죠. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　自分の価値を否定されて殺されるのはとても悲しい。",
		   NULL, "자신의 가치를 부정당하며 살해당하는 것은 매우 슬픈 일입니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　泣きながら許しを乞う悲劇の犯人？",
		   NULL, "울면서 용서를 구하는 비극의 범인? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　これも悔しいですよね。",
		   NULL, "이것도 억울하죠. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　許しを乞うくらいなら殺したりするな（笑）",
		   NULL, "용서를 빌 정도면 애초에 죽이질 말라구. (웃음) ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　じゃあ、どんな犯人になら、殺されても納得できますか…？",
		   NULL, "그럼 어떤 범인이라면, 살해당해도 납득할 수 있겠습니까...? ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　結局、「同意」なんて、その殺人劇を、楽しめるか否かでしかないのかも。",
		   NULL, "결국 \"동의\"라는 것은, 그 살인극을 즐길 수 있는지 아닌지에 달린 것뿐일지도요. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　同意できれば、楽しい。",
		   NULL, "동의할 수 있다면 즐겁다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　同意できなければ、狂ってる。",
		   NULL, "동의할 수 없으면 광기. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　命に元々重さなんてないんです。",
		   NULL, "생명에는 원래 무게가 없어요. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　それを測ろうとするのがヒトの罪。",
		   NULL, "그것을 재려하는 것이 인간의 죄. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　殺人は殺人。",
		   NULL, "살인은 살인이다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　それ以上でも以下でもない。",
		   NULL, "그 이상, 그 이하도 아니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　だから、みんなで仲良く暮らしていけたらいいな、と。",
		   NULL, "그러니까 모두 사이좋게 살아가면 좋겠다... ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　いかがですか？",
		   NULL, "어떻습니까? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　あなたはこの話に、同意できますか？",
		   NULL, "당신은 이 말에 동의할 수 있습니까? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　できなかったなら、",
		   NULL, "하지 못했다면 ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "………くすくすくすくす。",
		   NULL, "...쿡쿡쿡쿡. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　この度は「ひぐらしのなく頃に」、「目明し編」をお楽しみくださり、誠にありがとうございました。",
		   NULL, "이번에 '쓰르라미 울 적에 해' ~메아카시 편~ 을 즐겨주셔서 대단히 감사합니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　皆さんの応援のお陰で、無事に第５話をお届けすることができました。",
		   NULL, "여러분의 응원 덕분에 무사히 챕터 5를 보여줄 수 있었습니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　物語はいよいよ結末に向け加速して参ります。",
		   NULL, "드디어 이야기는 결말을 향해 가속화되고 있습니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　どうか今後ともお付き合いいただければこれほど嬉しいことはありません。",
		   NULL, "부디 앞으로도 애독해 주시면 그만큼 기쁜 일은 없겠습니다. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　次回シナリオは「罪滅し編」と題しまして、平成１７年夏のコミックマーケット発表を目指しています。",
		   NULL, "다음번 시나리오는 \"츠미호로보시 편\"이라는 제목을 달고, 헤이세이 17(2005)년 여름 코믹 마켓 발표를 목표로 하고 있습니다. ", Line_WaitForInput);
	OutputLine(NULL, "　どうか、ちょっぴりでも楽しみにしていただけたら幸いです。",
		   NULL, "부디 조금이라도 기대해주신다면 좋겠습니다. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　この度は遊んでくださり、本当にありがとうございました。",
		   NULL, "이번에 플레이해주셔서 정말 감사드립니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　退屈な時間の、ささやかな彩りになりましたら幸いです。",
		   NULL, "지루한 일상의 소소한 즐거움이 되셨기를 바랍니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }

	SetSpeedOfMessage( TRUE, 128 );
	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　　　　　　　　０７ｔｈ　Ｅｘｐａｎｓｉｏｎ",
		   NULL, "07th Expansion\n", Line_ContinueAfterTyping);
	SetSpeedOfMessage( FALSE, 0 );
	SetSpeedOfMessage( TRUE, 128 );
	OutputLine(NULL, "　　　　　　　　　　　　　　　　　竜騎士07",
		   NULL, "용기사07 ", Line_Normal);
	ClearMessage();
	SetSpeedOfMessage( FALSE, 0 );

	CallScript( "&eye" );
	FadeOutBGM( 0, 1000, TRUE );

	GetAchievement("HIGURASHI_STORY_EP05_OMAKE");
}
