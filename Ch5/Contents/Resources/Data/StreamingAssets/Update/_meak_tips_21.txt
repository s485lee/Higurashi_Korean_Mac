void main()
{
	EnableJumpingOfReturnIcon();
	FadeOutBGM( 0, 0, FALSE );
	FadeOutBGM( 1, 0, FALSE );
	FadeOutBGM( 2, 0, FALSE );
	FadeOutBGM( 3, 0, FALSE );
	ClearMessage();

	DrawScene("background/nort", 1000 );
	PlayBGM( 0, "hgrs01", 56, 0 );

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　園崎詩音の、死の間際の告白の信憑性は不明。",
		   NULL, "소노자키 시온이 죽기 직전에 한 고백의 신빙성은 불명. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　園崎本家は何もやっていないと、鬼婆があっさり詩音を騙したのか。",
		   NULL, "소노자키 본가는 아무것도 하지 않았다고, 마귀할멈이 시온을 간단히 속인 건가. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　本当に園崎本家は何もやっていないのか。",
		   NULL, "정말로 소노자키 본가는 아무것도 하지 않은 건가. ", Line_Normal);
	ClearMessage();
	PlaySE( 0, "s_page", 56, 64 );

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　私自身が今日までの調査で、園崎本家の存在だけで祟りを説明できないことを証明してしまっている。",
		   NULL, "나 자신이 오늘까지의 조사로, 소노자키 본가의 존재만으로 신벌을 설명할 수 없다는 증명을 끝냈다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　そう、だからこの私のノートは、１ページ目の冒頭から全部でたらめ。",
		   NULL, "그래, 그러니까 나의 이 노트는, 1페이지 첫머리부터 전부 엉터리. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　私が２００ページ近くも書き溜めてきたこのノートは、ただの狂人の世迷言。",
		   NULL, "내가 200페이지 가까이 쓴 이 노트는, 단순히 미친 사람의 넋두리. ", Line_Normal);
	ClearMessage();
	PlaySE( 0, "s_page", 56, 64 );

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　ノートを破り捨てて焚き火に放り込もうかとも思った。",
		   NULL, "노트를 찢어 버려 모닥불에 던져 넣을까 생각도 했다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　でもやめた。",
		   NULL, "그렇지만 그만두었다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　このノートは私の罪の証。",
		   NULL, "이 노트는 내 죄의 증거. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　私は罪を誤魔化さない。",
		   NULL, "나는 죄를 속이지 않는다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　だから灰にして消してしまったりなどしない。",
		   NULL, "그러니 재로 만들어서 지워 버릴 생각도 없다. ", Line_Normal);
	ClearMessage();
	PlaySE( 0, "s_page", 56, 64 );

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　私の人生は結局、ノート１冊で表せる程度だった。",
		   NULL, "내 인생은 결국 노트 한 권으로 나타낼 수 있을 정도다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　このノートを誰かが読むことがあるだろうか。",
		   NULL, "이 노트를 누군가가 읽을 일이 있을까. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　読むことがあったならどうか、私の愚かしさから何かの教訓を。",
		   NULL, "읽는 사람이 있다면 부디, 내 어리석음으로부터 무언가 교훈을 얻기를. ", Line_Normal);
	ClearMessage();
	PlaySE( 0, "s_page", 56, 64 );

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　雛見沢村連続怪死事件。",
		   NULL, "히나미자와 마을 연속 괴사 사건. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　通称、オヤシロさまの祟り。",
		   NULL, "통칭 오야시로님의 신벌. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　これを読んでいる私以外のあなた。",
		   NULL, "이 글을 읽고 있는 나 이외의 당신. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　どうか真相を。",
		   NULL, "제발 진상을 밝혀주세요. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　それだけが、",
		   NULL, "그것만이, ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "私の",
		   NULL, "나의 ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 1100 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "望みです。",
		   NULL, "소망입니다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }
	SetSpeedOfMessage( TRUE, 128 );

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "昭和５８年６月※※日",
		   NULL, "쇼와 58년 6월 XX일. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }
	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "園崎魅音",
		   NULL, "소노자키 미온. ", Line_Normal);
	ClearMessage();
	SetSpeedOfMessage( FALSE, 0 );
	DisableWindow();
	Wait( 1000 );
	DrawScene("black", 1000 );
}
