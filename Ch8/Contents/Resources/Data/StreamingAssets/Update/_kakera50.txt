void main()
{
	if(GetLocalFlag(FragmentRead51) == 1 )
	{
		CallScript("_kakera50_02");
		SetLocalFlag( LFragmentLoop, 0 );
		Return();
	}

	DrawScene( "black", 400 );

	DrawScene( "white", 1000 );

	PlayBGM( 0, "maturi_01_Ver2", 120, 0 );

	DrawScene( "background/fure2", 400 );

	ClearMessage();
	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　７つのカケラを様々な奇跡で結び集め、",
		   NULL, "7개의 조각을 다양한 기적으로 이어서 모으고, ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "……私はようやくこのカケラを手にする。",
		   NULL, "나는 드디어 이 조각을 손에 넣었다. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…このカケラの中に、私たちの最後の運命が詰まっている。",
		   NULL, "...이 조각 안에 우리의 마지막 운명이 담겨 있다. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　でも、……覗く前に、少しだけ待ってほしいの。",
		   NULL, "하지만 들여다 보기 전에 잠깐 기다려 줬으면 해. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　この中にある運命は、私たちが覗けばそれで決まってしまう。",
		   NULL, "이 안에 담긴 운명은 우리가 보면 결정되고 말아. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　……猫を詰めた箱の話をしたことはあったっけ？",
		   NULL, "...고양이를 가둔 상자 얘기를 했었던가? ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　箱の中の猫は生きているか、死んでいるか。",
		   NULL, "상자 안의 고양이는 살아 있을까, 죽어 있을까. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…開ければわかることだけど、開けるまではわからない。",
		   NULL, "...열어보면 알겠지만 열기 전까진 몰라. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　生きているかもしれないし、死んでいるかもしれない。",
		   NULL, "살아 있을지도, 죽었을지도 모르지. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　つまり、中身のわからない開ける前の箱の中には、",
		   NULL, "그러니까 열기 전에 내용물을 알 수 없는 상자 안엔, ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "……生きた猫と、死んだ猫が同時に存在しているということなの。",
		   NULL, "살아 있는 고양이와 죽은 고양이가 동시에 존재하고 있는 거야.... ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　そして、開けて真実を知った瞬間に、ありえない方が消えてしまう。",
		   NULL, "열어서 진실을 안 순간에 한 쪽이 사라지지. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…このカケラの中身も同じこと。",
		   NULL, "이 조각의 내용물도 마찬가지야. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　この中には、私たちの望む未来と、鷹野の望む未来が同時に存在している。",
		   NULL, "이 안엔 우리가 바라는 미래와 타카노가 바라는 미래가 동시에 존재해. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　それらは相反していて、互いの未来を否定し合っている。",
		   NULL, "그 둘은 상반돼서 서로를 부정해. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　覗けば、片方の未来は、消えてしまう。",
		   NULL, "들여다보면 한 쪽의 미래는 사라져. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　もし、……私たちの駒がこれ以上なく充分に揃っているならば、",
		   NULL, "만약 우리의 말이 더 바랄 것 없이 충분히 갖춰졌다면... ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "…私たちは覚悟を決めて、このカケラを覗いてみよう。",
		   NULL, "각오를 다지고 이 조각을 들여다 보자. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…でも。",
		   NULL, "...하지만. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　私たちはゲーム盤の上に、これまでと同じ駒しか、まだ並べていない。",
		   NULL, "우린 아직 게임판 위에 지금까지와 똑같은 말밖에 놓지 못했어. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　そして、その条件でのゲームもやはり、鷹野たちの圧勝だった。",
		   NULL, "그리고 그 조건에서 펼친 게임은 역시 타카노 일당의 압승이었지. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　すでに皆殺し編のカケラで試している。",
		   NULL, "이미 미나고로시 편의 조각으로 시험해 봤어. ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　まだ、…駒がいるのだ。",
		   NULL, "아직... 말이 남았을 거야. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　強い力を持ち、ルールＹを打ち砕いてくれる強さを持った駒の協力が。",
		   NULL, "룰 Y를 쳐부술 정도로, 정말 강한 말의 협력이 필요해. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　……その駒が得られるまで、",
		   NULL, "...그 말을 얻을 때까지, ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 750 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "……私は恐ろしくて、このカケラを覗くことができない…。",
		   NULL, "나는 무서워서, 이 조각을 들여다볼 수 없어.... ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　でも、そんな駒をどうやって得るの？",
		   NULL, "하지만 그런 말은 어떻게 얻지? ", Line_WaitForInput);
	OutputLine(NULL, "　今まで一度も得たことがないのに？",
		   NULL, "지금까지 한 번도 얻은 적 없는데? ", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　……それを得るには、",
		   NULL, "...그 말을 얻기 위해선, ", Line_WaitForInput);
	OutputLine(NULL, "もう一度だけ、",
		   NULL, "다시 한 번, ", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 1000 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "いる。",
		   NULL, "필요해. ", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　奇跡の力が、いる。",
		   NULL, "기적의 힘이 필요해. ", Line_Normal);
	ClearMessage();

	CallScript( "&eye" );
	FadeOutBGM( 0, 1000, FALSE );
	DrawScene( "black", 1000 );

}
